{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Email Inbox Folders\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.folders, folder => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: folder.id\n    }, [_createVNode(_component_router_link, {\n      to: '/emails/' + folder.id\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(folder.displayName), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","folders","folder","key","id","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_toDisplayString","displayName","_"],"sources":["C:\\Users\\Abha Agrawal\\Desktop\\outlook add-in\\frontend\\src\\components\\InboxFolders.vue"],"sourcesContent":["<!-- InboxFolders.vue -->\r\n<template>\r\n  <div>\r\n    <h2>Email Inbox Folders</h2>\r\n    <ul>\r\n      <li v-for=\"folder in folders\" :key=\"folder.id\">\r\n        <router-link :to=\"'/emails/' + folder.id\">{{ folder.displayName }}</router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      folders: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchInboxFolders();\r\n  },\r\n  methods: {\r\n    async fetchInboxFolders() {\r\n      try {\r\n        const response = await this.$axios.get('http://localhost:3000/api/inboxfolders', {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$route.query.access_token}`,\r\n          },\r\n        });\r\n\r\n        this.folders = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching inbox folders:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add your component styles here */\r\n</style>\r\n"],"mappings":";gCAGIA,mBAAA,CAA4B,YAAxB,qBAAmB;;;uBADzBC,mBAAA,CAOM,cANJC,UAA4B,EAC5BF,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKE,SAAA,QAPXC,WAAA,CAK2BC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAjBN,mBAAA,CAEK;MAF0BO,GAAG,EAAED,MAAM,CAACE;QACzCC,YAAA,CAAgFC,sBAAA;MAAlEC,EAAE,eAAeL,MAAM,CAACE;;MAN9CI,OAAA,EAAAC,QAAA,CAMkD,MAAwB,CAN1EC,gBAAA,CAAAC,gBAAA,CAMqDT,MAAM,CAACU,WAAW,iB;MANvEC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}